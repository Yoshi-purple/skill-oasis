{"remainingRequest":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\src\\views\\Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\src\\views\\Login.vue","mtime":1635440451792},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\css-loader\\dist\\cjs.js","mtime":1612412721943},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1629275980431},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\postcss-loader\\src\\index.js","mtime":1612412722820},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612412714520},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis\\node_modules\\vue-loader\\lib\\index.js","mtime":1629275980431}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnRuLWxvZ2luIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzliMjcwOwogIGNvbG9yOiAjZmZmOwogIGJvcmRlcjogIzc5YjI3MDsKICBib3JkZXItcmFkaXVzOiA2cHg7Cn0KI2xvZ2luLXRhZyB7CiAgd2lkdGg6IDIwMHB4OwogIGNvbG9yOiAjZmZmZmZmOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItYm90dG9tOiAzMHB4IHNvbGlkICM3OWIyNzA7CiAgLyogYm9yZGVyLXJpZ2h0OiAwcHggc29saWQgdHJhbnNwYXJlbnQ7ICovCiAgaGVpZ2h0OiAwOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container-fruid\" style=\"height: 1440px\">\n    <div\n      class=\"card d-flex mx-auto\"\n      style=\"\n        margin-top: 100px;\n        margin-bottom: 100px;\n        max-width: 650px;\n        background-color: #ffffff;\n      \"\n    >\n      <div id=\"login-tag\">ログイン</div>\n\n      <div class=\"mb-3 row\" style=\"text-align: center\">\n        <div class=\"row\" style=\"margin-top: 60px\">\n          <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">メールアドレス</label>\n          <div class=\"col-sm-10\">\n            <input\n              v-model=\"email\"\n              type=\"text\"\n              class=\"form-control\"\n              value=\"email@example.com\"\n              style=\"background-color: #eceeec; border: none\"\n            />\n          </div>\n          <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">パスワード</label>\n          <div class=\"col-sm-10\">\n            <input\n              v-model=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              id=\"inputPassword\"\n              style=\"background-color: #eceeec; border: none\"\n            />\n          </div>\n        </div>\n        <div class=\"row\" style=\"margin-top: 30px\">\n          <div class=\"d-grid gap-2 col-12 mx-auto justify-content-center\">\n            <button\n              class=\"btn\"\n              type=\"button\"\n              style=\"\n                background-color: #79b270;\n                color: #fff;\n                border: #79b270;\n                border-radius: 6px;\n              \"\n              @click=\"signIn()\"\n            >\n              ログイン\n            </button>\n\n            <button class=\"btn btn-light\" type=\"button\" @click=\"signupWithGoogle()\">\n              Googleでログイン\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Auth } from 'aws-amplify';\nimport { AmplifyEventBus } from 'aws-amplify-vue';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n    };\n  },\n  created() {\n    this.isUserSignedIn();\n    AmplifyEventBus.$on('authState', (info) => {\n      if (info === 'signedIn') {\n        this.isUserSignedIn();\n      } else {\n        this.signedIn = false;\n      }\n    });\n  },\n  computed: {},\n  methods: {\n    async isUserSignedIn() {\n      try {\n        const userObj = await Auth.currentAuthenticatedUser();\n        this.signedIn = true;\n        this.$store.commit('setLoginUser', {\n          userName: userObj.username,\n          email: userObj.attributes.email,\n        });\n      } catch (err) {\n        this.signedIn = false;\n        console.log(err);\n      }\n    },\n    async signIn() {\n      try {\n        await Auth.signIn(this.email, this.password);\n        this.isUserSignedIn();\n        this.$router.push('Mypage');\n        this.$store.commit('setAuthState');\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async signupWithGoogle() {\n      try {\n        const user = await Auth.federatedSignIn({ provider: 'Google' });\n        console.log(user);\n        const userObj = await Auth.currentAuthenticatedUser();\n        this.signedIn = true;\n        this.$store.commit('setLoginUser', {\n          userName: userObj.attributes.name,\n          email: userObj.attributes.email,\n        });\n        this.$router.push('Mypage' );\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n<style>\n.btn-login {\n  background-color: #79b270;\n  color: #fff;\n  border: #79b270;\n  border-radius: 6px;\n}\n#login-tag {\n  width: 200px;\n  color: #ffffff;\n  text-align: center;\n  border-bottom: 30px solid #79b270;\n  /* border-right: 0px solid transparent; */\n  height: 0;\n}\n</style>\n"]}]}