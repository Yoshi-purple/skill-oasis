{"remainingRequest":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\src\\views\\Signup.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\src\\views\\Signup.vue","mtime":1635103267799},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\css-loader\\dist\\cjs.js","mtime":1612412721943},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1629275980431},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\postcss-loader\\src\\index.js","mtime":1612412722820},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612412714520},{"path":"D:\\プログラミング\\ポートフォリオ\\skill-oasis\\skill-oasis-project\\node_modules\\vue-loader\\lib\\index.js","mtime":1629275980431}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNpZ251cCB7CiAgbWFyZ2luLXRvcDogMTAwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CiNzaWdudXAtdGFnIHsKICB3aWR0aDogMjAwcHg7CiAgY29sb3I6ICNmZmZmZmY7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJvcmRlci1ib3R0b206IDMwcHggc29saWQgIzc5YjI3MDsKICAvKiBib3JkZXItcmlnaHQ6IDBweCBzb2xpZCB0cmFuc3BhcmVudDsgKi8KICBoZWlnaHQ6IDA7Cn0K"},{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Signup.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container-fluid\" style=\"height: 1440px\">\n    <div class=\"container\" style=\"margin-top: 100px\">\n      <div class=\"card d-flex mx-auto\" style=\"max-width: 650px\">\n        <div id=\"signup-tag\">新規会員登録</div>\n        <div class=\"mb-3 row\" style=\"text-align: center\">\n          <div class=\"row\" style=\"margin-top: 60px\">\n            <label for=\"userName\" class=\"col-sm-2 col-form-label\">ユーザー名</label>\n            <div class=\"col-sm-10\">\n              <input\n                v-model=\"userName\"\n                type=\"text\"\n                class=\"form-control\"\n                style=\"background-color: #eceeec; border: none\"\n              />\n            </div>\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\"\n              >メールアドレス</label\n            >\n            <div class=\"col-sm-10\">\n              <input\n                v-model=\"email\"\n                type=\"text\"\n                class=\"form-control\"\n                value=\"email@example.com\"\n                style=\"background-color: #eceeec; border: none\"\n              />\n            </div>\n            <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">パスワード</label>\n            <div class=\"col-sm-10\">\n              <input\n                v-model=\"password\"\n                type=\"password\"\n                class=\"form-control\"\n                id=\"inputPassword\"\n                style=\"background-color: #eceeec; border: none\"\n              />\n            </div>\n          </div>\n          <div class=\"row\" style=\"margin-top: 30px\">\n            <div class=\"d-grid gap-2 col-12 mx-auto justify-content-center\">\n              <button\n                class=\"btn\"\n                type=\"button\"\n                style=\"\n                  background-color: #79b270;\n                  color: #fff;\n                  border: #79b270;\n                  border-radius: 6px;\n                \"\n                @click=\"signUp()\"\n                @submit=\"signUp()\"\n              >\n                新規会員登録(無料)\n              </button>\n              <button class=\"btn btn-light\" type=\"button\" @click=\"signupWithGoogle()\">\n                Googleでログイン\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport { Auth } from 'aws-amplify';\nimport { AmplifyEventBus } from 'aws-amplify-vue';\n\nexport default {\n  computed: {\n    ...mapGetters(['authState', 'loginUser']),\n  },\n  created() {\n    AmplifyEventBus.$on('authState', (info) => {\n      if (info === 'signedIn') {\n        this.isUserSignedIn();\n      } else {\n        this.signedIn = false;\n      }\n    });\n  },\n  data() {\n    return {\n      userName: '',\n      email: '',\n      password: '',\n      signedIn: false,\n    };\n  },\n  methods: {\n    async isUserSignedIn() {\n      try {\n        const userObj = await Auth.currentAuthenticatedUser();\n        this.signedIn = true;\n        this.$store.commit('setLoginUser', {\n          userName: userObj.username,\n          email: userObj.attributes.email,\n        });\n        console.log(userObj);\n        console.log(this.loginUser);\n      } catch (err) {\n        this.signedIn = false;\n        console.log(err);\n      }\n    },\n    async signUp() {\n      try {\n        await Auth.signUp({\n          username: this.userName,\n          password: this.password,\n          attributes: {\n            email: this.email, // optional\n          },\n        })\n          .then((user) => {\n            this.$router.push({\n              path: '/Confirmsignup',\n              query: {\n                email: this.email,\n                username: this.userName,\n                password: this.password,\n              },\n            });\n            console.log(user);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async signupWithGoogle() {\n      try {\n        const user = await Auth.federatedSignIn({ provider: 'Google' });\n        console.log(user);\n        const userObj = await Auth.currentAuthenticatedUser();\n        this.signedIn = true;\n        this.$store.commit('setLoginUser', {\n          userName: userObj.attributes.name,\n          email: userObj.attributes.email,\n        });\n        this.$router.push({ path: 'Makeprofile' });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n<style>\n.signup {\n  margin-top: 100px;\n  text-align: center;\n}\n#signup-tag {\n  width: 200px;\n  color: #ffffff;\n  text-align: center;\n  border-bottom: 30px solid #79b270;\n  /* border-right: 0px solid transparent; */\n  height: 0;\n}\n</style>\n"]}]}